% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotting_functions.R
\name{pred_centile}
\alias{pred_centile}
\title{Predict single centile}
\usage{
pred_centile(centile_returned, df, q_func, n_param)
}
\arguments{
\item{centile_returned}{numeric value indicating percentile to calculate (range 0-1)}

\item{df}{dataframe containing predicted values returned from \code{predictAll()}}

\item{q_func}{quantile function for the model's distribution family}

\item{n_param}{number of parameters contained in the model's distribution family}
}
\value{
list of values for y
}
\description{
\code{pred_centile} calculates the values of one centile from output of \code{\link[gamlss:predict.gamlss]{gamlss::predictAll()}}.
}
\details{
This function predicted response values from \code{\link[gamlss:predict.gamlss]{gamlss::predictAll()}}
and returns the values of y across a specified centile. Used as subfunction within
\code{\link[=centile_predict]{centile_predict()}}.
}
\examples{
#predict a specific centile value across simulated data
iris_model <- gamlss(formula = Sepal.Width ~ Sepal.Length + Species, sigma.formula = ~ Sepal.Length, data=iris, family=BCCG)
sim_df <- sim_data(iris, "Sepal.Length", "Species", iris_model)
pred_df <- predictAll(iris_model, newdata = sim_df$virginica, type="response")
pred_centile(0.1, pred_df, "qBCCG", 3)

#lapply to get many centiles
iris_model <- gamlss(formula = Sepal.Width ~ Sepal.Length + Species, sigma.formula = ~ Sepal.Length, data=iris, family=BCCG)
sim_df <- sim_data(iris, "Sepal.Length", "Species", iris_model)
pred_df <- predictAll(iris_model, newdata = sim_df$virginica, type="response")
desiredCentiles <- c(0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99)
lapply(desiredCentiles, pred_centile, df = pred_df, q_func = "qBCCG", n_param = 3)

}
