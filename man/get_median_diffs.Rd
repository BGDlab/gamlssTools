% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bootstrapping.R
\name{get_median_diffs}
\alias{get_median_diffs}
\title{Calculate Median Differences}
\usage{
get_median_diffs(
  gamlssModel,
  df,
  x_var,
  factor_var,
  B = 100,
  type = c("resample", "bayes", "LOSO"),
  stratify = FALSE,
  boot_group_var = NULL,
  sim_data_list = NULL,
  special_term = NULL,
  moment = c("mu", "sigma"),
  interval = 0.95,
  ci_type = c("pointwise", "simultaneous"),
  boot_list = NULL,
  factor_var_levels = NULL
)
}
\arguments{
\item{gamlssModel}{gamlss model object}

\item{df}{dataframe model was originally fit on}

\item{x_var}{continuous predictor (e.g. 'age'), which \code{sim_data_list} varies over#'}

\item{factor_var}{categorical variable to compare levels within.}

\item{B}{number of samples/models to bootstrap. Defaults to 100. if \code{type = "LOSO"}, B will be updated to
the number of unique values of \code{group_var}}

\item{type}{which type of bootstrapping to perform. \code{resample} performs traditional bootstrapping (resample with replacement)
across all groups; alternatively, it may be combined with \code{stratify=TRUE} and \code{group_var} args below to bootstrap
while maintaining each group's (e.g study's) n. \code{bayes} keeps the original dataframe but randomizes each observation's
weight. \code{LOSO} drops an entire subset from the sample (indicated by \code{group_var}) with each bootstrap.}

\item{stratify}{logical. with \code{type=resample} will bootstrap within each level of \code{group_var}.}

\item{boot_group_var}{categorical/factor variable that resampling will be stratified within (when \code{type=resample})
or that one level will be dropped from in each bootstraped sample (when \code{type=LOSO}). Can also be a list, allowing
stratification within multiple groups e.g. \code{group_var=c(sex, study)}}

\item{sim_data_list}{list of simulated dataframes returned by \code{sim_data()} (optional)}

\item{special_term}{optional, passed to gamlssTools::sim_data()}

\item{moment}{what moment to get CIs for. \code{mu} returns CIs around 50th centile, \code{sigma} returns predicted
value of sigma (with link-function applied)}

\item{interval}{size of confidence interval to calculate. Defaults to 0.95, or 95\%}

\item{ci_type}{options for type of precentile CI to return. \code{pointwise} (default) calculates percentiles at 500 points
along \code{x_var}. \code{simultaneous} implements simultaneous CIs along \code{x_var}
as described in Gao et al (doi: 10.3390/sym13071212).}

\item{boot_list}{output of gamlssTools::bootstrap_gamlss() (optional)}

\item{factor_var_levels}{(optional) specify the order for factor levels. E.g., \code{factor_var_levels = c("A", "B")}
would calculate the difference A - B.}
}
\value{
list of dataframes containing differences in trajectories, as well as CIs calculated at each level of \code{factor_var}
}
\description{
Wrapper function for bootstrapping samples, refitting gamlss models, calculating differences in two
factor levels' trajectories, getting simultaneous CIs around that difference and finding
significant departures from zero
}
\examples{
df <- data.frame(
 Age = sample(0:36525, 10000, replace = TRUE),
 Sex = sample(c("Male", "Female"), 10000, replace = TRUE),
 Study = factor(sample(c("Study_A", "Study_B", "Study_C"), 10000, replace = TRUE)))

df$Pheno <- ((df$Age)/365)^3 + rnorm(10000, mean = 0, sd = 100000)
df$Pheno <- scales::rescale(df$Pheno, to = c(1, 10))

#fit gamlss model
pheno_model <- gamlss(formula = Pheno ~ pb(Age) + Sex + random(Study), sigma.formula= ~ pb(Age), data = df, family=BCCG)
diffs <- get_median_diffs(pheno_model, df, "Age", "Sex", B=10, stratify=TRUE, boot_group_var=c("Study", "Sex"))

#plot
col_name <- names(diffs)[grep("minus", names(diffs))]
ggplot(diffs) +
    geom_line(aes(x=Age, y=!!sym(col_name))) +
    theme_linedraw() +
    geom_ribbon(mapping = aes(ymin = lower, ymax = upper, x = Age),
    alpha = 0.4)
    
}
