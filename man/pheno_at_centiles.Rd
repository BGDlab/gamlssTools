% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict_funs.R
\name{pheno_at_centiles}
\alias{pheno_at_centiles}
\title{Get phenotype at centile(s)}
\usage{
pheno_at_centiles(
  gamlssModel,
  df,
  range_var,
  factor_var = NULL,
  desiredCentiles = c(0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99),
  average_over = FALSE,
  sim_data_list = NULL,
  remove_cent_effect = NULL,
  ...
)
}
\arguments{
\item{gamlssModel}{gamlss model object}

\item{df}{dataframe used to fit the gamlss model}

\item{range_var}{continuous predictor (e.g. 'age') that y will be predicted across the range of}

\item{factor_var}{(optional) categorical predictor (e.g. 'sex') that y will be predicted at each level of.
Alternatively, you can average over each level of this variable (see \code{average_over}).}

\item{desiredCentiles}{list of percentiles as values between 0 and 1 that will be
calculated and returned. Defaults to c(0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99),
which returns the 1st percentile, 5th percentile, 10th percentile, etc.}

\item{average_over}{logical indicating whether to average predicted centiles across each level of \code{factor_var}.
Defaults to \code{FALSE}, which will return a centile value for each level of \code{factor_var}.}

\item{sim_data_list}{optional argument that takes the output of \code{sim_data()}. Can be useful when you're using
many models fit on the same dataframe}

\item{remove_cent_effect}{logical indicating whether to correct for the effect of a variable (such as study). Defaults to \code{FALSE}.}
}
\value{
dataframe
}
\description{
Predict the values of a phenotype (y) at each desired centile, given specified covariates
}
\details{
Simulates data across the range of \code{range_var} and at each level of \code{factor_var}, then uses this
simulated dataset to determine what y (phenotype) is for each centile/at each combo of \code{range_var}
\code{factor_var}. Holds all other covariates in the gamlss model at their mean or mode. You can save
time when predicting multiple models/phenos fit on the same data/predictors
by first running \code{\link[=sim_data]{sim_data()}} and supplying the output to arg \code{sim_data_list}.
}
\examples{
iris_model <- gamlss(formula = Sepal.Width ~ Sepal.Length + Petal.Width + Species, sigma.formula = ~ Sepal.Length, data=iris, family=NO)

#for each level of 'Species', find 'Sepal.Width' values corresponding to 25th percentile across the range of 'Sepal.Length'
#holding all other covariates constant at mean/mode
pheno_at_centiles(iris_model, iris, "Sepal.Length", "Species", desiredCentiles=0.25)

#get 'Sepal.Width' at each centile, averaging across levels of Species
pheno_at_centiles(iris_model, iris, "Sepal.Length", "Species", average_over=TRUE)

}
